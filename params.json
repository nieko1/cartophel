{"name":"Leaflet-opencage-search","tagline":"A Leaflet search control that uses OpenCage Data's geocoder.","body":"# OpenCage Data Search and Geocoding Control for Leaflet\r\n\r\nA [Leaflet](http://leafletjs.com/) search control that uses [OpenCage Data's](http://geocoder.opencagedata.com/)\r\ngeocoder.\r\n\r\nTo see the plugin in action, take a look at the [demo](http://geocoder.opencagedata.com/code/leaflet-demo.html).\r\n\r\n## Installation\r\n\r\nClone from GitHub: `git@github.com:opencagedata/leaflet-opencage-search.git`.\r\n\r\nInstall with Bower: `$ bower install Leaflet.OpenCage.Search`.\r\n\r\nDownload a [zip or tarball archive](https://github.com/opencagedata/leaflet-opencage-search/releases) from GitHub.\r\n\r\n## Configuration\r\n\r\nThe control uses two image files that it expects to find in a directory with\r\na path relative to the control's CSS files as `../images`. If you've installed\r\nthe control using Bower you'll find these in `bower_components/Leaflet.OpenCage.Search/dist/images/`. If you've\r\ncloned the control's GitHub repository or downloaded and unpacked an archive\r\nfrom GitHub, you'll find these in 'dist/images'.\r\n\r\nWhichever installation method you've chosen, you'll need to move a copy of these\r\ntwo image files to a directory relative to the location of the control's CSS files.\r\n\r\n## Usage\r\n\r\nLoad the plugin's CSS and JavaScript files:\r\n\r\n```HTML\r\n<link rel=\"stylesheet\" href=\"leaflet-opencage-search/dist/css/L.Control.OpenCageSearch.dev.css\" />\r\n<script src=\"leaflet-opencage-search/dist/js/L.Control.OpenCageSearch.dev.js\"></script>\r\n```\r\n\r\nAdd the plugin's control to an `L.Map` instance:\r\n\r\n```javascript\r\nvar map = L.map('map').setView([51.52255, -0.10249], 13);\r\nvar options = {\r\n\tkey: 'your-api-key-here',\r\n\tlimit: 10\r\n};\r\nvar control = L.Control.openCageSearch(options).addTo(map);\r\nL.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {\r\n\tattribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n}).addTo(map);\r\n\r\n```\r\n\r\n## Development and Production Versions\r\n\r\n## Rebuilding from Source\r\n\r\nThe plugin's build process is managed by [Grunt](http://gruntjs.com/installing-grunt),\r\nwhich in turn is built on top of [Node.js](http://nodejs.org/). You'll need to have\r\nboth of these applications installed on your machine to rebuild the plugin from source.\r\n\r\nAssuming you have both Grunt and Node.js installed, you can install all the build\r\ndependencies with a single command, from the plugin's root directory:\r\n\r\n```shell\r\n$ npm install\r\n```\r\n\r\nThis will install all of the plugin's dependencies into the `node_modules` directory\r\n(and which is also why you'll find this directory in the plugin's `.gitignore` file).\r\n\r\nOnce you have all the dependencies in place, you can rebuild the plugin from source\r\nby simply running `grunt`:\r\n\r\n```shell\r\n$ grunt\r\nRunning \"clean:dist\" (clean) task\r\nCleaning dist/css...OK\r\nCleaning dist/images...OK\r\nCleaning dist/js...OK\r\n\r\nRunning \"jshint:files\" (jshint) task\r\n>> 1 file lint free.\r\n\r\nRunning \"concat:dist\" (concat) task\r\nFile dist/js/L.Control.OpenCageSearch.dev.js created.\r\nFile dist/css/L.Control.OpenCageSearch.dev.css created.\r\n\r\nRunning \"uglify:dist\" (uglify) task\r\nFile dist/js/L.Control.OpenCageSearch.min.js created: 8.38 kB → 6.09 kB\r\n\r\nRunning \"cssmin:minify\" (cssmin) task\r\nFile dist/css/L.Control.OpenCageData.Search.min.css created: 2.86 kB → 2.5 kB\r\n\r\nRunning \"copy:images\" (copy) task\r\nCopied 2 files\r\n\r\nDone, without errors.\r\n```\r\n\r\n## Credits\r\n\r\nThis plugin was based on and inspired by [Per Liedman's](https://github.com/perliedman) [Leaflet Control Geocoder](https://github.com/perliedman/leaflet-control-geocoder).\r\nThanks, credits and kudos go to Per for making a well structured plugin and for\r\nmaking it available under an Open Source license.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}